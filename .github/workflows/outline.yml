name: Build and publish outline
on:
  schedule:
    - cron: '0 10 * * *'
  workflow_dispatch:
    inputs:
      version:
        description: 'Outline version'
        required: true

jobs:
  check_release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.latest.outputs.version }}
      exists: ${{ steps.manifest.outputs.exists }}
    steps:
      - name: Fetch outline latest release
        id: latest
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: |
          curl -sL https://api.github.com/repos/outline/outline/releases/latest | \
          echo "version=$(jq -r '.tag_name[1:]')" >> $GITHUB_OUTPUT
      - name: Check docker image exists
        id: manifest
        run: |
          if docker manifest inspect ghcr.io/${{github.actor}}/outline:${{ github.event.inputs.version || steps.latest.outputs.version }} > /dev/null ; \
          then echo "exists=true" >> $GITHUB_OUTPUT ; \
          else echo "exists=false" >> $GITHUB_OUTPUT ; \
          fi

  publish:
    runs-on: ubuntu-latest
    needs: [check_release]
    if: ${{ needs.check_release.outputs.exists == 'false' || github.event.inputs.version }}
    env:
      VERSION: "${{ github.event.inputs.version || needs.check_release.outputs.version }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build docker image
        working-directory: outline
        run: |
          docker build --build-arg BUILD_TAG=v${VERSION} -t ghcr.io/${{github.actor}}/outline:${VERSION} .;
      - name: Docker login
        if: ${{ needs.check_release.outputs.exists == 'false' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Publish image
        if: ${{ needs.check_release.outputs.exists == 'false' }}
        working-directory: outline
        run: |
          docker tag ghcr.io/${{github.actor}}/outline:$VERSION ghcr.io/${{github.actor}}/outline:latest;
          docker push ghcr.io/${{github.actor}}/outline:$VERSION;
          docker push ghcr.io/${{github.actor}}/outline:latest;
